#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>



#define speed ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0) 
using namespace std;

template <typename T>
class matrix {
public:
    int r;
    int c;
    vector<vector<T>> cell;


    matrix(int x, int y) : r(x), c(y) {
       cell.resize(x, vector<T>(y));
    }
    void matrix_input() {
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                cin >> cell[i][j];
            }
        }
    }

    matrix<T> operator+(matrix<T>& b) {
        matrix<T> m(r, c);
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                m.cell[i][j] = cell[i][j] + b.cell[i][j];
            }
        }
        return m;
    }


   
    matrix<T> operator-(matrix<T>& b) {
        matrix<T> m(r, c);
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
               m.cell[i][j] = cell[i][j] - b.cell[i][j];
            }
        }
        return m;
    }

    void matrix_show() {
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j) {
                cout << cell[i][j]<<" ";
            }
            cout << "\n";
        }
    }

};





int main()
{
    matrix<double> a(3, 3); a.matrix_input();
    matrix<double> b(3, 3); b.matrix_input();
    (a + b).matrix_show();
    (a - b).matrix_show();
}
